name: Open_Kernel

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Load Configuration
        uses: falti/dotenv-action@v1.0.2
        id: config
        with:
          path: config.env

      - name: Check Configuration
        run: |
          function required () { if ! [[ "$1" ]]; then echo "$2 variable can't be null." && exit 1; fi }
          required "${{ steps.config.outputs.kernel_name }}" "KERNEL_NAME config"
          required "${{ steps.config.outputs.branch_name }}" "BRANCH_NAME config"
          required "${{ steps.config.outputs.kernel_url }}" "KERNEL_URL config"
 
      - name: Git kernel
        run: |
          git clone "${{ steps.config.outputs.kernel_url }}" -b "${{ steps.config.outputs.branch_name }}" kernel
          git clone https://github.com/YinCQL/AnyKernel3 AnyKernel3
      - name: Setup Environment
        run: |
          cd $GITHUB_WORKSPACE/kernel
          git clone https://github.com/LineageOS/android_prebuilts_gcc_linux-x86_aarch64_aarch64-linux-android-4.9 -b lineage-18.1 tool/aarch
          git clone https://github.com/LineageOS/android_prebuilts_gcc_linux-x86_arm_arm-linux-androideabi-4.9 -b lineage-18.1 tool/arm
          sh -c "$(curl -sSL https://github.com/akhilnarang/scripts/raw/master/setup/android_build_env.sh/)"

      - name: make kernel
        run: |
          sudo mv build.sh $GITHUB_WORKSPACE/kernel
          cd $GITHUB_WORKSPACE/kernel
          bash ./build.sh

      - name: Packaging the Kernel
        run: |
          cp -v kernel/out/arch/arm64/boot/Image.gz-dtb \
                     AnyKernel3/
          pushd AnyKernel3
          7z a -mx9 ../MI8SE-Kernel.zip *
          popd

      - name: Upload to Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "MI8SE-Kernel.zip"
          tag: "${{ github.run_number }}_MI8SE-Kernel"
          token: ${{ secrets.GITHUB_TOKEN }}
